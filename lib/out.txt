
print.o：     文件格式 elf32-tradlittlemips


Disassembly of section .text:

00000000 <vprintfmt>:
/* forward declaration */
static void print_char(fmt_callback_t, void *, char, int, int);
static void print_str(fmt_callback_t, void *, const char *, int, int);
static void print_num(fmt_callback_t, void *, unsigned long, int, int, int, int, char, int);

void vprintfmt(fmt_callback_t out, void *data, const char *fmt, va_list ap) {
   0:	27bdffa8 	addiu	sp,sp,-88
   4:	afbf0054 	sw	ra,84(sp)
   8:	afbe0050 	sw	s8,80(sp)
   c:	03a0f025 	move	s8,sp
  10:	afc40058 	sw	a0,88(s8)
  14:	afc5005c 	sw	a1,92(s8)
  18:	afc60060 	sw	a2,96(s8)
  1c:	afc70064 	sw	a3,100(s8)
		/* flush the string found so far */
		/* Exercise 1.4: Your code here. (2/8) */

		/* check "are we hitting the end?" */
		/* Exercise 1.4: Your code here. (3/8) */
		if (!*fmt) {
  20:	8fc20060 	lw	v0,96(s8)
  24:	00000000 	nop
  28:	80420000 	lb	v0,0(v0)
  2c:	00000000 	nop
  30:	104001a3 	beqz	v0,6c0 <vprintfmt+0x6c0>
  34:	00000000 	nop
			break;
		}

		/* we found a '%' */
		/* Exercise 1.4: Your code here. (4/8) */
		int fmt_flag = 0;
  38:	afc0003c 	sw	zero,60(s8)
		if (*fmt == '%') {
  3c:	8fc20060 	lw	v0,96(s8)
  40:	00000000 	nop
  44:	80430000 	lb	v1,0(v0)
  48:	24020025 	li	v0,37
  4c:	14620009 	bne	v1,v0,74 <vprintfmt+0x74>
  50:	00000000 	nop
			fmt++;
  54:	8fc20060 	lw	v0,96(s8)
  58:	00000000 	nop
  5c:	24420001 	addiu	v0,v0,1
  60:	afc20060 	sw	v0,96(s8)
			fmt_flag = 1;
  64:	24020001 	li	v0,1
  68:	afc2003c 	sw	v0,60(s8)
  6c:	10000002 	b	78 <vprintfmt+0x78>
  70:	00000000 	nop
		} else {
			fmt_flag = 0;
  74:	afc0003c 	sw	zero,60(s8)
		}

		/* check format flag */
		/* Exercise 1.4: Your code here. (5/8) */
		if (fmt_flag) {
  78:	8fc2003c 	lw	v0,60(s8)
  7c:	00000000 	nop
  80:	1040001e 	beqz	v0,fc <vprintfmt+0xfc>
  84:	00000000 	nop
			c = *fmt++;
  88:	8fc20060 	lw	v0,96(s8)
  8c:	00000000 	nop
  90:	24430001 	addiu	v1,v0,1
  94:	afc30060 	sw	v1,96(s8)
  98:	90420000 	lbu	v0,0(v0)
  9c:	00000000 	nop
  a0:	a3c20040 	sb	v0,64(s8)
			if (c == '-') {
  a4:	83c30040 	lb	v1,64(s8)
  a8:	2402002d 	li	v0,45
  ac:	14620005 	bne	v1,v0,c4 <vprintfmt+0xc4>
  b0:	00000000 	nop
				ladjust = 1;
  b4:	24020001 	li	v0,1
  b8:	afc20034 	sw	v0,52(s8)
  bc:	10000010 	b	100 <vprintfmt+0x100>
  c0:	00000000 	nop
			} else if (c == '0') {
  c4:	83c30040 	lb	v1,64(s8)
  c8:	24020030 	li	v0,48
  cc:	14620005 	bne	v1,v0,e4 <vprintfmt+0xe4>
  d0:	00000000 	nop
				padc = '0';
  d4:	24020030 	li	v0,48
  d8:	a3c20038 	sb	v0,56(s8)
  dc:	10000008 	b	100 <vprintfmt+0x100>
  e0:	00000000 	nop
			} else {
				fmt--;
  e4:	8fc20060 	lw	v0,96(s8)
  e8:	00000000 	nop
  ec:	2442ffff 	addiu	v0,v0,-1
  f0:	afc20060 	sw	v0,96(s8)
  f4:	10000002 	b	100 <vprintfmt+0x100>
  f8:	00000000 	nop
			}
		} else {
			ladjust = 0;
  fc:	afc00034 	sw	zero,52(s8)
			// padc    = '';
		}

		/* get width */
		/* Exercise 1.4: Your code here. (6/8) */
		if (fmt_flag) {
 100:	8fc2003c 	lw	v0,60(s8)
 104:	00000000 	nop
 108:	10400023 	beqz	v0,198 <vprintfmt+0x198>
 10c:	00000000 	nop
			width = 0;
 110:	afc0002c 	sw	zero,44(s8)
			while (*fmt >= '0' && *fmt <= '9') {
 114:	10000010 	b	158 <vprintfmt+0x158>
 118:	00000000 	nop
				width = width * 10 + *fmt++;
 11c:	8fc3002c 	lw	v1,44(s8)
 120:	00000000 	nop
 124:	00601025 	move	v0,v1
 128:	00021080 	sll	v0,v0,0x2
 12c:	00431021 	addu	v0,v0,v1
 130:	00021040 	sll	v0,v0,0x1
 134:	00402025 	move	a0,v0
 138:	8fc20060 	lw	v0,96(s8)
 13c:	00000000 	nop
 140:	24430001 	addiu	v1,v0,1
 144:	afc30060 	sw	v1,96(s8)
 148:	80420000 	lb	v0,0(v0)
 14c:	00000000 	nop
 150:	00821021 	addu	v0,a0,v0
 154:	afc2002c 	sw	v0,44(s8)
			while (*fmt >= '0' && *fmt <= '9') {
 158:	8fc20060 	lw	v0,96(s8)
 15c:	00000000 	nop
 160:	80420000 	lb	v0,0(v0)
 164:	00000000 	nop
 168:	28420030 	slti	v0,v0,48
 16c:	1440000b 	bnez	v0,19c <vprintfmt+0x19c>
 170:	00000000 	nop
 174:	8fc20060 	lw	v0,96(s8)
 178:	00000000 	nop
 17c:	80420000 	lb	v0,0(v0)
 180:	00000000 	nop
 184:	2842003a 	slti	v0,v0,58
 188:	1440ffe4 	bnez	v0,11c <vprintfmt+0x11c>
 18c:	00000000 	nop
 190:	10000002 	b	19c <vprintfmt+0x19c>
 194:	00000000 	nop
			} 
		} else {
			width = 0;
 198:	afc0002c 	sw	zero,44(s8)
		}

		/* check for long */
		/* Exercise 1.4: Your code here. (7/8) */
		if (fmt_flag) {
 19c:	8fc2003c 	lw	v0,60(s8)
 1a0:	00000000 	nop
 1a4:	10400015 	beqz	v0,1fc <vprintfmt+0x1fc>
 1a8:	00000000 	nop
			c = *fmt++;
 1ac:	8fc20060 	lw	v0,96(s8)
 1b0:	00000000 	nop
 1b4:	24430001 	addiu	v1,v0,1
 1b8:	afc30060 	sw	v1,96(s8)
 1bc:	90420000 	lbu	v0,0(v0)
 1c0:	00000000 	nop
 1c4:	a3c20040 	sb	v0,64(s8)
			if (c == 'l') {
 1c8:	83c30040 	lb	v1,64(s8)
 1cc:	2402006c 	li	v0,108
 1d0:	14620005 	bne	v1,v0,1e8 <vprintfmt+0x1e8>
 1d4:	00000000 	nop
				long_flag = 1;
 1d8:	24020001 	li	v0,1
 1dc:	afc20030 	sw	v0,48(s8)
 1e0:	10000006 	b	1fc <vprintfmt+0x1fc>
 1e4:	00000000 	nop
			} else {
				long_flag = 0;
 1e8:	afc00030 	sw	zero,48(s8)
				fmt--;
 1ec:	8fc20060 	lw	v0,96(s8)
 1f0:	00000000 	nop
 1f4:	2442ffff 	addiu	v0,v0,-1
 1f8:	afc20060 	sw	v0,96(s8)
			}
		}

		neg_flag = 0;
 1fc:	afc00044 	sw	zero,68(s8)
		switch (*fmt) {
 200:	8fc20060 	lw	v0,96(s8)
 204:	00000000 	nop
 208:	80420000 	lb	v0,0(v0)
 20c:	00000000 	nop
 210:	10400119 	beqz	v0,678 <vprintfmt+0x678>
 214:	00000000 	nop
 218:	0440011d 	bltz	v0,690 <vprintfmt+0x690>
 21c:	00000000 	nop
 220:	28430079 	slti	v1,v0,121
 224:	1060011a 	beqz	v1,690 <vprintfmt+0x690>
 228:	00000000 	nop
 22c:	28430044 	slti	v1,v0,68
 230:	14600117 	bnez	v1,690 <vprintfmt+0x690>
 234:	00000000 	nop
 238:	2442ffbc 	addiu	v0,v0,-68
 23c:	2c430035 	sltiu	v1,v0,53
 240:	10600113 	beqz	v1,690 <vprintfmt+0x690>
 244:	00000000 	nop
 248:	00021880 	sll	v1,v0,0x2
 24c:	3c020000 	lui	v0,0x0
 250:	24420000 	addiu	v0,v0,0
 254:	00621021 	addu	v0,v1,v0
 258:	8c420000 	lw	v0,0(v0)
 25c:	00000000 	nop
 260:	00400008 	jr	v0
 264:	00000000 	nop
		case 'b':
			if (long_flag) {
 268:	8fc20030 	lw	v0,48(s8)
 26c:	00000000 	nop
 270:	1040000a 	beqz	v0,29c <vprintfmt+0x29c>
 274:	00000000 	nop
				num = va_arg(ap, long int);
 278:	8fc20064 	lw	v0,100(s8)
 27c:	00000000 	nop
 280:	24430004 	addiu	v1,v0,4
 284:	afc30064 	sw	v1,100(s8)
 288:	8c420000 	lw	v0,0(v0)
 28c:	00000000 	nop
 290:	afc20028 	sw	v0,40(s8)
 294:	10000008 	b	2b8 <vprintfmt+0x2b8>
 298:	00000000 	nop
			} else {
				num = va_arg(ap, int);
 29c:	8fc20064 	lw	v0,100(s8)
 2a0:	00000000 	nop
 2a4:	24430004 	addiu	v1,v0,4
 2a8:	afc30064 	sw	v1,100(s8)
 2ac:	8c420000 	lw	v0,0(v0)
 2b0:	00000000 	nop
 2b4:	afc20028 	sw	v0,40(s8)
			}
			print_num(out, data, num, 2, 0, width, ladjust, padc, 0);
 2b8:	8fc30028 	lw	v1,40(s8)
 2bc:	afa00020 	sw	zero,32(sp)
 2c0:	83c20038 	lb	v0,56(s8)
 2c4:	00000000 	nop
 2c8:	afa2001c 	sw	v0,28(sp)
 2cc:	8fc20034 	lw	v0,52(s8)
 2d0:	00000000 	nop
 2d4:	afa20018 	sw	v0,24(sp)
 2d8:	8fc2002c 	lw	v0,44(s8)
 2dc:	00000000 	nop
 2e0:	afa20014 	sw	v0,20(sp)
 2e4:	afa00010 	sw	zero,16(sp)
 2e8:	24070002 	li	a3,2
 2ec:	00603025 	move	a2,v1
 2f0:	8fc5005c 	lw	a1,92(s8)
 2f4:	8fc40058 	lw	a0,88(s8)
 2f8:	0c00027a 	jal	9e8 <print_num>
 2fc:	00000000 	nop
			break;
 300:	100000e9 	b	6a8 <vprintfmt+0x6a8>
 304:	00000000 	nop

		case 'd':
		case 'D':
			if (long_flag) {
 308:	8fc20030 	lw	v0,48(s8)
 30c:	00000000 	nop
 310:	1040000a 	beqz	v0,33c <vprintfmt+0x33c>
 314:	00000000 	nop
				num = va_arg(ap, long int);
 318:	8fc20064 	lw	v0,100(s8)
 31c:	00000000 	nop
 320:	24430004 	addiu	v1,v0,4
 324:	afc30064 	sw	v1,100(s8)
 328:	8c420000 	lw	v0,0(v0)
 32c:	00000000 	nop
 330:	afc20028 	sw	v0,40(s8)
			 * complete this part. Think the differences between case 'd' and the
			 * others. (hint: 'neg_flag').
			 */
			/* Exercise 1.4: Your code here. (8/8) */

			break;
 334:	100000dc 	b	6a8 <vprintfmt+0x6a8>
 338:	00000000 	nop
				num = va_arg(ap, int);
 33c:	8fc20064 	lw	v0,100(s8)
 340:	00000000 	nop
 344:	24430004 	addiu	v1,v0,4
 348:	afc30064 	sw	v1,100(s8)
 34c:	8c420000 	lw	v0,0(v0)
 350:	00000000 	nop
 354:	afc20028 	sw	v0,40(s8)
			break;
 358:	100000d3 	b	6a8 <vprintfmt+0x6a8>
 35c:	00000000 	nop

		case 'o':
		case 'O':
			if (long_flag) {
 360:	8fc20030 	lw	v0,48(s8)
 364:	00000000 	nop
 368:	1040000a 	beqz	v0,394 <vprintfmt+0x394>
 36c:	00000000 	nop
				num = va_arg(ap, long int);
 370:	8fc20064 	lw	v0,100(s8)
 374:	00000000 	nop
 378:	24430004 	addiu	v1,v0,4
 37c:	afc30064 	sw	v1,100(s8)
 380:	8c420000 	lw	v0,0(v0)
 384:	00000000 	nop
 388:	afc20028 	sw	v0,40(s8)
 38c:	10000008 	b	3b0 <vprintfmt+0x3b0>
 390:	00000000 	nop
			} else {
				num = va_arg(ap, int);
 394:	8fc20064 	lw	v0,100(s8)
 398:	00000000 	nop
 39c:	24430004 	addiu	v1,v0,4
 3a0:	afc30064 	sw	v1,100(s8)
 3a4:	8c420000 	lw	v0,0(v0)
 3a8:	00000000 	nop
 3ac:	afc20028 	sw	v0,40(s8)
			}
			print_num(out, data, num, 8, 0, width, ladjust, padc, 0);
 3b0:	8fc30028 	lw	v1,40(s8)
 3b4:	afa00020 	sw	zero,32(sp)
 3b8:	83c20038 	lb	v0,56(s8)
 3bc:	00000000 	nop
 3c0:	afa2001c 	sw	v0,28(sp)
 3c4:	8fc20034 	lw	v0,52(s8)
 3c8:	00000000 	nop
 3cc:	afa20018 	sw	v0,24(sp)
 3d0:	8fc2002c 	lw	v0,44(s8)
 3d4:	00000000 	nop
 3d8:	afa20014 	sw	v0,20(sp)
 3dc:	afa00010 	sw	zero,16(sp)
 3e0:	24070008 	li	a3,8
 3e4:	00603025 	move	a2,v1
 3e8:	8fc5005c 	lw	a1,92(s8)
 3ec:	8fc40058 	lw	a0,88(s8)
 3f0:	0c00027a 	jal	9e8 <print_num>
 3f4:	00000000 	nop
			break;
 3f8:	100000ab 	b	6a8 <vprintfmt+0x6a8>
 3fc:	00000000 	nop

		case 'u':
		case 'U':
			if (long_flag) {
 400:	8fc20030 	lw	v0,48(s8)
 404:	00000000 	nop
 408:	1040000a 	beqz	v0,434 <vprintfmt+0x434>
 40c:	00000000 	nop
				num = va_arg(ap, long int);
 410:	8fc20064 	lw	v0,100(s8)
 414:	00000000 	nop
 418:	24430004 	addiu	v1,v0,4
 41c:	afc30064 	sw	v1,100(s8)
 420:	8c420000 	lw	v0,0(v0)
 424:	00000000 	nop
 428:	afc20028 	sw	v0,40(s8)
 42c:	10000008 	b	450 <vprintfmt+0x450>
 430:	00000000 	nop
			} else {
				num = va_arg(ap, int);
 434:	8fc20064 	lw	v0,100(s8)
 438:	00000000 	nop
 43c:	24430004 	addiu	v1,v0,4
 440:	afc30064 	sw	v1,100(s8)
 444:	8c420000 	lw	v0,0(v0)
 448:	00000000 	nop
 44c:	afc20028 	sw	v0,40(s8)
			}
			print_num(out, data, num, 10, 0, width, ladjust, padc, 0);
 450:	8fc30028 	lw	v1,40(s8)
 454:	afa00020 	sw	zero,32(sp)
 458:	83c20038 	lb	v0,56(s8)
 45c:	00000000 	nop
 460:	afa2001c 	sw	v0,28(sp)
 464:	8fc20034 	lw	v0,52(s8)
 468:	00000000 	nop
 46c:	afa20018 	sw	v0,24(sp)
 470:	8fc2002c 	lw	v0,44(s8)
 474:	00000000 	nop
 478:	afa20014 	sw	v0,20(sp)
 47c:	afa00010 	sw	zero,16(sp)
 480:	2407000a 	li	a3,10
 484:	00603025 	move	a2,v1
 488:	8fc5005c 	lw	a1,92(s8)
 48c:	8fc40058 	lw	a0,88(s8)
 490:	0c00027a 	jal	9e8 <print_num>
 494:	00000000 	nop
			break;
 498:	10000083 	b	6a8 <vprintfmt+0x6a8>
 49c:	00000000 	nop

		case 'x':
			if (long_flag) {
 4a0:	8fc20030 	lw	v0,48(s8)
 4a4:	00000000 	nop
 4a8:	1040000a 	beqz	v0,4d4 <vprintfmt+0x4d4>
 4ac:	00000000 	nop
				num = va_arg(ap, long int);
 4b0:	8fc20064 	lw	v0,100(s8)
 4b4:	00000000 	nop
 4b8:	24430004 	addiu	v1,v0,4
 4bc:	afc30064 	sw	v1,100(s8)
 4c0:	8c420000 	lw	v0,0(v0)
 4c4:	00000000 	nop
 4c8:	afc20028 	sw	v0,40(s8)
 4cc:	10000008 	b	4f0 <vprintfmt+0x4f0>
 4d0:	00000000 	nop
			} else {
				num = va_arg(ap, int);
 4d4:	8fc20064 	lw	v0,100(s8)
 4d8:	00000000 	nop
 4dc:	24430004 	addiu	v1,v0,4
 4e0:	afc30064 	sw	v1,100(s8)
 4e4:	8c420000 	lw	v0,0(v0)
 4e8:	00000000 	nop
 4ec:	afc20028 	sw	v0,40(s8)
			}
			print_num(out, data, num, 16, 0, width, ladjust, padc, 0);
 4f0:	8fc30028 	lw	v1,40(s8)
 4f4:	afa00020 	sw	zero,32(sp)
 4f8:	83c20038 	lb	v0,56(s8)
 4fc:	00000000 	nop
 500:	afa2001c 	sw	v0,28(sp)
 504:	8fc20034 	lw	v0,52(s8)
 508:	00000000 	nop
 50c:	afa20018 	sw	v0,24(sp)
 510:	8fc2002c 	lw	v0,44(s8)
 514:	00000000 	nop
 518:	afa20014 	sw	v0,20(sp)
 51c:	afa00010 	sw	zero,16(sp)
 520:	24070010 	li	a3,16
 524:	00603025 	move	a2,v1
 528:	8fc5005c 	lw	a1,92(s8)
 52c:	8fc40058 	lw	a0,88(s8)
 530:	0c00027a 	jal	9e8 <print_num>
 534:	00000000 	nop
			break;
 538:	1000005b 	b	6a8 <vprintfmt+0x6a8>
 53c:	00000000 	nop

		case 'X':
			if (long_flag) {
 540:	8fc20030 	lw	v0,48(s8)
 544:	00000000 	nop
 548:	1040000a 	beqz	v0,574 <vprintfmt+0x574>
 54c:	00000000 	nop
				num = va_arg(ap, long int);
 550:	8fc20064 	lw	v0,100(s8)
 554:	00000000 	nop
 558:	24430004 	addiu	v1,v0,4
 55c:	afc30064 	sw	v1,100(s8)
 560:	8c420000 	lw	v0,0(v0)
 564:	00000000 	nop
 568:	afc20028 	sw	v0,40(s8)
 56c:	10000008 	b	590 <vprintfmt+0x590>
 570:	00000000 	nop
			} else {
				num = va_arg(ap, int);
 574:	8fc20064 	lw	v0,100(s8)
 578:	00000000 	nop
 57c:	24430004 	addiu	v1,v0,4
 580:	afc30064 	sw	v1,100(s8)
 584:	8c420000 	lw	v0,0(v0)
 588:	00000000 	nop
 58c:	afc20028 	sw	v0,40(s8)
			}
			print_num(out, data, num, 16, 0, width, ladjust, padc, 1);
 590:	8fc30028 	lw	v1,40(s8)
 594:	24020001 	li	v0,1
 598:	afa20020 	sw	v0,32(sp)
 59c:	83c20038 	lb	v0,56(s8)
 5a0:	00000000 	nop
 5a4:	afa2001c 	sw	v0,28(sp)
 5a8:	8fc20034 	lw	v0,52(s8)
 5ac:	00000000 	nop
 5b0:	afa20018 	sw	v0,24(sp)
 5b4:	8fc2002c 	lw	v0,44(s8)
 5b8:	00000000 	nop
 5bc:	afa20014 	sw	v0,20(sp)
 5c0:	afa00010 	sw	zero,16(sp)
 5c4:	24070010 	li	a3,16
 5c8:	00603025 	move	a2,v1
 5cc:	8fc5005c 	lw	a1,92(s8)
 5d0:	8fc40058 	lw	a0,88(s8)
 5d4:	0c00027a 	jal	9e8 <print_num>
 5d8:	00000000 	nop
			break;
 5dc:	10000032 	b	6a8 <vprintfmt+0x6a8>
 5e0:	00000000 	nop

		case 'c':
			c = (char)va_arg(ap, int);
 5e4:	8fc20064 	lw	v0,100(s8)
 5e8:	00000000 	nop
 5ec:	24430004 	addiu	v1,v0,4
 5f0:	afc30064 	sw	v1,100(s8)
 5f4:	8c420000 	lw	v0,0(v0)
 5f8:	00000000 	nop
 5fc:	a3c20040 	sb	v0,64(s8)
			print_char(out, data, c, width, ladjust);
 600:	83c30040 	lb	v1,64(s8)
 604:	8fc20034 	lw	v0,52(s8)
 608:	00000000 	nop
 60c:	afa20010 	sw	v0,16(sp)
 610:	8fc7002c 	lw	a3,44(s8)
 614:	00603025 	move	a2,v1
 618:	8fc5005c 	lw	a1,92(s8)
 61c:	8fc40058 	lw	a0,88(s8)
 620:	0c0001b8 	jal	6e0 <print_char>
 624:	00000000 	nop
			break;
 628:	1000001f 	b	6a8 <vprintfmt+0x6a8>
 62c:	00000000 	nop

		case 's':
			s = (char *)va_arg(ap, char *);
 630:	8fc20064 	lw	v0,100(s8)
 634:	00000000 	nop
 638:	24430004 	addiu	v1,v0,4
 63c:	afc30064 	sw	v1,100(s8)
 640:	8c420000 	lw	v0,0(v0)
 644:	00000000 	nop
 648:	afc20048 	sw	v0,72(s8)
			print_str(out, data, s, width, ladjust);
 64c:	8fc20034 	lw	v0,52(s8)
 650:	00000000 	nop
 654:	afa20010 	sw	v0,16(sp)
 658:	8fc7002c 	lw	a3,44(s8)
 65c:	8fc60048 	lw	a2,72(s8)
 660:	8fc5005c 	lw	a1,92(s8)
 664:	8fc40058 	lw	a0,88(s8)
 668:	0c00020f 	jal	83c <print_str>
 66c:	00000000 	nop
			break;
 670:	1000000d 	b	6a8 <vprintfmt+0x6a8>
 674:	00000000 	nop

		case '\0':
			fmt--;
 678:	8fc20060 	lw	v0,96(s8)
 67c:	00000000 	nop
 680:	2442ffff 	addiu	v0,v0,-1
 684:	afc20060 	sw	v0,96(s8)
			break;
 688:	10000007 	b	6a8 <vprintfmt+0x6a8>
 68c:	00000000 	nop

		default:
			/* output this char as it is */
			out(data, fmt, 1);
 690:	8fc20058 	lw	v0,88(s8)
 694:	24060001 	li	a2,1
 698:	8fc50060 	lw	a1,96(s8)
 69c:	8fc4005c 	lw	a0,92(s8)
 6a0:	0040f809 	jalr	v0
 6a4:	00000000 	nop
		}
		fmt++;
 6a8:	8fc20060 	lw	v0,96(s8)
 6ac:	00000000 	nop
 6b0:	24420001 	addiu	v0,v0,1
 6b4:	afc20060 	sw	v0,96(s8)
	for (;;) {
 6b8:	1000fe59 	b	20 <vprintfmt+0x20>
 6bc:	00000000 	nop
	...
	}
}
 6c8:	03c0e825 	move	sp,s8
 6cc:	8fbf0054 	lw	ra,84(sp)
 6d0:	8fbe0050 	lw	s8,80(sp)
 6d4:	27bd0058 	addiu	sp,sp,88
 6d8:	03e00008 	jr	ra
 6dc:	00000000 	nop

000006e0 <print_char>:

/* --------------- local help functions --------------------- */
void print_char(fmt_callback_t out, void *data, char c, int length, int ladjust) {
 6e0:	27bdffe0 	addiu	sp,sp,-32
 6e4:	afbf001c 	sw	ra,28(sp)
 6e8:	afbe0018 	sw	s8,24(sp)
 6ec:	03a0f025 	move	s8,sp
 6f0:	afc40020 	sw	a0,32(s8)
 6f4:	afc50024 	sw	a1,36(s8)
 6f8:	00c01025 	move	v0,a2
 6fc:	afc7002c 	sw	a3,44(s8)
 700:	a3c20028 	sb	v0,40(s8)
	int i;

	if (length < 1) {
 704:	8fc2002c 	lw	v0,44(s8)
 708:	00000000 	nop
 70c:	1c400003 	bgtz	v0,71c <print_char+0x3c>
 710:	00000000 	nop
		length = 1;
 714:	24020001 	li	v0,1
 718:	afc2002c 	sw	v0,44(s8)
	}
	const char space = ' ';
 71c:	24020020 	li	v0,32
 720:	a3c20014 	sb	v0,20(s8)
	if (ladjust) {
 724:	8fc20030 	lw	v0,48(s8)
 728:	00000000 	nop
 72c:	1040001f 	beqz	v0,7ac <print_char+0xcc>
 730:	00000000 	nop
		out(data, &c, 1);
 734:	27c30028 	addiu	v1,s8,40
 738:	8fc20020 	lw	v0,32(s8)
 73c:	24060001 	li	a2,1
 740:	00602825 	move	a1,v1
 744:	8fc40024 	lw	a0,36(s8)
 748:	0040f809 	jalr	v0
 74c:	00000000 	nop
		for (i = 1; i < length; i++) {
 750:	24020001 	li	v0,1
 754:	afc20010 	sw	v0,16(s8)
 758:	1000000c 	b	78c <print_char+0xac>
 75c:	00000000 	nop
			out(data, &space, 1);
 760:	27c30014 	addiu	v1,s8,20
 764:	8fc20020 	lw	v0,32(s8)
 768:	24060001 	li	a2,1
 76c:	00602825 	move	a1,v1
 770:	8fc40024 	lw	a0,36(s8)
 774:	0040f809 	jalr	v0
 778:	00000000 	nop
		for (i = 1; i < length; i++) {
 77c:	8fc20010 	lw	v0,16(s8)
 780:	00000000 	nop
 784:	24420001 	addiu	v0,v0,1
 788:	afc20010 	sw	v0,16(s8)
 78c:	8fc30010 	lw	v1,16(s8)
 790:	8fc2002c 	lw	v0,44(s8)
 794:	00000000 	nop
 798:	0062102a 	slt	v0,v1,v0
 79c:	1440fff0 	bnez	v0,760 <print_char+0x80>
 7a0:	00000000 	nop
		for (i = 0; i < length - 1; i++) {
			out(data, &space, 1);
		}
		out(data, &c, 1);
	}
}
 7a4:	1000001e 	b	820 <print_char+0x140>
 7a8:	00000000 	nop
		for (i = 0; i < length - 1; i++) {
 7ac:	afc00010 	sw	zero,16(s8)
 7b0:	1000000c 	b	7e4 <print_char+0x104>
 7b4:	00000000 	nop
			out(data, &space, 1);
 7b8:	27c30014 	addiu	v1,s8,20
 7bc:	8fc20020 	lw	v0,32(s8)
 7c0:	24060001 	li	a2,1
 7c4:	00602825 	move	a1,v1
 7c8:	8fc40024 	lw	a0,36(s8)
 7cc:	0040f809 	jalr	v0
 7d0:	00000000 	nop
		for (i = 0; i < length - 1; i++) {
 7d4:	8fc20010 	lw	v0,16(s8)
 7d8:	00000000 	nop
 7dc:	24420001 	addiu	v0,v0,1
 7e0:	afc20010 	sw	v0,16(s8)
 7e4:	8fc2002c 	lw	v0,44(s8)
 7e8:	00000000 	nop
 7ec:	2442ffff 	addiu	v0,v0,-1
 7f0:	8fc30010 	lw	v1,16(s8)
 7f4:	00000000 	nop
 7f8:	0062102a 	slt	v0,v1,v0
 7fc:	1440ffee 	bnez	v0,7b8 <print_char+0xd8>
 800:	00000000 	nop
		out(data, &c, 1);
 804:	27c30028 	addiu	v1,s8,40
 808:	8fc20020 	lw	v0,32(s8)
 80c:	24060001 	li	a2,1
 810:	00602825 	move	a1,v1
 814:	8fc40024 	lw	a0,36(s8)
 818:	0040f809 	jalr	v0
 81c:	00000000 	nop
}
 820:	00000000 	nop
 824:	03c0e825 	move	sp,s8
 828:	8fbf001c 	lw	ra,28(sp)
 82c:	8fbe0018 	lw	s8,24(sp)
 830:	27bd0020 	addiu	sp,sp,32
 834:	03e00008 	jr	ra
 838:	00000000 	nop

0000083c <print_str>:

void print_str(fmt_callback_t out, void *data, const char *s, int length, int ladjust) {
 83c:	27bdffd8 	addiu	sp,sp,-40
 840:	afbf0024 	sw	ra,36(sp)
 844:	afbe0020 	sw	s8,32(sp)
 848:	03a0f025 	move	s8,sp
 84c:	afc40028 	sw	a0,40(s8)
 850:	afc5002c 	sw	a1,44(s8)
 854:	afc60030 	sw	a2,48(s8)
 858:	afc70034 	sw	a3,52(s8)
	int i;
	int len = 0;
 85c:	afc00014 	sw	zero,20(s8)
	const char *s1 = s;
 860:	8fc20030 	lw	v0,48(s8)
 864:	00000000 	nop
 868:	afc20018 	sw	v0,24(s8)
	while (*s1++) {
 86c:	10000005 	b	884 <print_str+0x48>
 870:	00000000 	nop
		len++;
 874:	8fc20014 	lw	v0,20(s8)
 878:	00000000 	nop
 87c:	24420001 	addiu	v0,v0,1
 880:	afc20014 	sw	v0,20(s8)
	while (*s1++) {
 884:	8fc20018 	lw	v0,24(s8)
 888:	00000000 	nop
 88c:	24430001 	addiu	v1,v0,1
 890:	afc30018 	sw	v1,24(s8)
 894:	80420000 	lb	v0,0(v0)
 898:	00000000 	nop
 89c:	1440fff5 	bnez	v0,874 <print_str+0x38>
 8a0:	00000000 	nop
	}
	if (length < len) {
 8a4:	8fc30034 	lw	v1,52(s8)
 8a8:	8fc20014 	lw	v0,20(s8)
 8ac:	00000000 	nop
 8b0:	0062102a 	slt	v0,v1,v0
 8b4:	10400004 	beqz	v0,8c8 <print_str+0x8c>
 8b8:	00000000 	nop
		length = len;
 8bc:	8fc20014 	lw	v0,20(s8)
 8c0:	00000000 	nop
 8c4:	afc20034 	sw	v0,52(s8)
	}

	if (ladjust) {
 8c8:	8fc20038 	lw	v0,56(s8)
 8cc:	00000000 	nop
 8d0:	10400020 	beqz	v0,954 <print_str+0x118>
 8d4:	00000000 	nop
		out(data, s, len);
 8d8:	8fc30014 	lw	v1,20(s8)
 8dc:	8fc20028 	lw	v0,40(s8)
 8e0:	00603025 	move	a2,v1
 8e4:	8fc50030 	lw	a1,48(s8)
 8e8:	8fc4002c 	lw	a0,44(s8)
 8ec:	0040f809 	jalr	v0
 8f0:	00000000 	nop
		for (i = len; i < length; i++) {
 8f4:	8fc20014 	lw	v0,20(s8)
 8f8:	00000000 	nop
 8fc:	afc20010 	sw	v0,16(s8)
 900:	1000000c 	b	934 <print_str+0xf8>
 904:	00000000 	nop
			out(data, " ", 1);
 908:	8fc20028 	lw	v0,40(s8)
 90c:	24060001 	li	a2,1
 910:	3c030000 	lui	v1,0x0
 914:	246500d4 	addiu	a1,v1,212
 918:	8fc4002c 	lw	a0,44(s8)
 91c:	0040f809 	jalr	v0
 920:	00000000 	nop
		for (i = len; i < length; i++) {
 924:	8fc20010 	lw	v0,16(s8)
 928:	00000000 	nop
 92c:	24420001 	addiu	v0,v0,1
 930:	afc20010 	sw	v0,16(s8)
 934:	8fc30010 	lw	v1,16(s8)
 938:	8fc20034 	lw	v0,52(s8)
 93c:	00000000 	nop
 940:	0062102a 	slt	v0,v1,v0
 944:	1440fff0 	bnez	v0,908 <print_str+0xcc>
 948:	00000000 	nop
		for (i = 0; i < length - len; i++) {
			out(data, " ", 1);
		}
		out(data, s, len);
	}
}
 94c:	1000001f 	b	9cc <print_str+0x190>
 950:	00000000 	nop
		for (i = 0; i < length - len; i++) {
 954:	afc00010 	sw	zero,16(s8)
 958:	1000000c 	b	98c <print_str+0x150>
 95c:	00000000 	nop
			out(data, " ", 1);
 960:	8fc20028 	lw	v0,40(s8)
 964:	24060001 	li	a2,1
 968:	3c030000 	lui	v1,0x0
 96c:	246500d4 	addiu	a1,v1,212
 970:	8fc4002c 	lw	a0,44(s8)
 974:	0040f809 	jalr	v0
 978:	00000000 	nop
		for (i = 0; i < length - len; i++) {
 97c:	8fc20010 	lw	v0,16(s8)
 980:	00000000 	nop
 984:	24420001 	addiu	v0,v0,1
 988:	afc20010 	sw	v0,16(s8)
 98c:	8fc30034 	lw	v1,52(s8)
 990:	8fc20014 	lw	v0,20(s8)
 994:	00000000 	nop
 998:	00621023 	subu	v0,v1,v0
 99c:	8fc30010 	lw	v1,16(s8)
 9a0:	00000000 	nop
 9a4:	0062102a 	slt	v0,v1,v0
 9a8:	1440ffed 	bnez	v0,960 <print_str+0x124>
 9ac:	00000000 	nop
		out(data, s, len);
 9b0:	8fc30014 	lw	v1,20(s8)
 9b4:	8fc20028 	lw	v0,40(s8)
 9b8:	00603025 	move	a2,v1
 9bc:	8fc50030 	lw	a1,48(s8)
 9c0:	8fc4002c 	lw	a0,44(s8)
 9c4:	0040f809 	jalr	v0
 9c8:	00000000 	nop
}
 9cc:	00000000 	nop
 9d0:	03c0e825 	move	sp,s8
 9d4:	8fbf0024 	lw	ra,36(sp)
 9d8:	8fbe0020 	lw	s8,32(sp)
 9dc:	27bd0028 	addiu	sp,sp,40
 9e0:	03e00008 	jr	ra
 9e4:	00000000 	nop

000009e8 <print_num>:

void print_num(fmt_callback_t out, void *data, unsigned long u, int base, int neg_flag, int length,
	       int ladjust, char padc, int upcase) {
 9e8:	27bdffb8 	addiu	sp,sp,-72
 9ec:	afbf0044 	sw	ra,68(sp)
 9f0:	afbe0040 	sw	s8,64(sp)
 9f4:	afb0003c 	sw	s0,60(sp)
 9f8:	03a0f025 	move	s8,sp
 9fc:	afc40048 	sw	a0,72(s8)
 a00:	afc5004c 	sw	a1,76(s8)
 a04:	afc60050 	sw	a2,80(s8)
 a08:	afc70054 	sw	a3,84(s8)
 a0c:	03a02025 	move	a0,sp
 a10:	00808025 	move	s0,a0
	 *		    if negtive, insert  "0" padding between "0" and number.
	 *  3. if (!ladjust) we reverse the whole string including paddings
	 *  4. otherwise we only reverse the actual string representing the num.
	 */

	int actualLength = 0;
 a14:	afc00020 	sw	zero,32(s8)
	char buf[length + 70];
 a18:	8fc4005c 	lw	a0,92(s8)
 a1c:	00000000 	nop
 a20:	24840046 	addiu	a0,a0,70
 a24:	2485ffff 	addiu	a1,a0,-1
 a28:	afc50024 	sw	a1,36(s8)
 a2c:	00802825 	move	a1,a0
 a30:	00a06025 	move	t4,a1
 a34:	00006825 	move	t5,zero
 a38:	000c2f42 	srl	a1,t4,0x1d
 a3c:	000d48c0 	sll	t1,t5,0x3
 a40:	00a94825 	or	t1,a1,t1
 a44:	000c40c0 	sll	t0,t4,0x3
 a48:	00802825 	move	a1,a0
 a4c:	00a05025 	move	t2,a1
 a50:	00005825 	move	t3,zero
 a54:	000a2f42 	srl	a1,t2,0x1d
 a58:	000b18c0 	sll	v1,t3,0x3
 a5c:	00a31825 	or	v1,a1,v1
 a60:	000a10c0 	sll	v0,t2,0x3
 a64:	00801025 	move	v0,a0
 a68:	24420007 	addiu	v0,v0,7
 a6c:	000210c2 	srl	v0,v0,0x3
 a70:	000210c0 	sll	v0,v0,0x3
 a74:	03a2e823 	subu	sp,sp,v0
 a78:	27a20010 	addiu	v0,sp,16
 a7c:	24420000 	addiu	v0,v0,0
 a80:	afc20028 	sw	v0,40(s8)
	char *p = buf;
 a84:	8fc20028 	lw	v0,40(s8)
 a88:	00000000 	nop
 a8c:	afc20010 	sw	v0,16(s8)
	int i;

	do {
		int tmp = u % base;
 a90:	8fc20054 	lw	v0,84(s8)
 a94:	8fc30050 	lw	v1,80(s8)
 a98:	00000000 	nop
 a9c:	0062001b 	divu	zero,v1,v0
 aa0:	14400002 	bnez	v0,aac <print_num+0xc4>
 aa4:	00000000 	nop
 aa8:	0007000d 	break	0x7
 aac:	00001010 	mfhi	v0
 ab0:	afc2002c 	sw	v0,44(s8)
		if (tmp <= 9) {
 ab4:	8fc2002c 	lw	v0,44(s8)
 ab8:	00000000 	nop
 abc:	2842000a 	slti	v0,v0,10
 ac0:	1040000f 	beqz	v0,b00 <print_num+0x118>
 ac4:	00000000 	nop
			*p++ = '0' + tmp;
 ac8:	8fc2002c 	lw	v0,44(s8)
 acc:	00000000 	nop
 ad0:	304200ff 	andi	v0,v0,0xff
 ad4:	24420030 	addiu	v0,v0,48
 ad8:	304400ff 	andi	a0,v0,0xff
 adc:	8fc20010 	lw	v0,16(s8)
 ae0:	00000000 	nop
 ae4:	24430001 	addiu	v1,v0,1
 ae8:	afc30010 	sw	v1,16(s8)
 aec:	00041e00 	sll	v1,a0,0x18
 af0:	00031e03 	sra	v1,v1,0x18
 af4:	a0430000 	sb	v1,0(v0)
 af8:	1000001f 	b	b78 <print_num+0x190>
 afc:	00000000 	nop
		} else if (upcase) {
 b00:	8fc20068 	lw	v0,104(s8)
 b04:	00000000 	nop
 b08:	1040000f 	beqz	v0,b48 <print_num+0x160>
 b0c:	00000000 	nop
			*p++ = 'A' + tmp - 10;
 b10:	8fc2002c 	lw	v0,44(s8)
 b14:	00000000 	nop
 b18:	304200ff 	andi	v0,v0,0xff
 b1c:	24420037 	addiu	v0,v0,55
 b20:	304400ff 	andi	a0,v0,0xff
 b24:	8fc20010 	lw	v0,16(s8)
 b28:	00000000 	nop
 b2c:	24430001 	addiu	v1,v0,1
 b30:	afc30010 	sw	v1,16(s8)
 b34:	00041e00 	sll	v1,a0,0x18
 b38:	00031e03 	sra	v1,v1,0x18
 b3c:	a0430000 	sb	v1,0(v0)
 b40:	1000000d 	b	b78 <print_num+0x190>
 b44:	00000000 	nop
		} else {
			*p++ = 'a' + tmp - 10;
 b48:	8fc2002c 	lw	v0,44(s8)
 b4c:	00000000 	nop
 b50:	304200ff 	andi	v0,v0,0xff
 b54:	24420057 	addiu	v0,v0,87
 b58:	304400ff 	andi	a0,v0,0xff
 b5c:	8fc20010 	lw	v0,16(s8)
 b60:	00000000 	nop
 b64:	24430001 	addiu	v1,v0,1
 b68:	afc30010 	sw	v1,16(s8)
 b6c:	00041e00 	sll	v1,a0,0x18
 b70:	00031e03 	sra	v1,v1,0x18
 b74:	a0430000 	sb	v1,0(v0)
		}
		u /= base;
 b78:	8fc20054 	lw	v0,84(s8)
 b7c:	8fc30050 	lw	v1,80(s8)
 b80:	00000000 	nop
 b84:	0062001b 	divu	zero,v1,v0
 b88:	14400002 	bnez	v0,b94 <print_num+0x1ac>
 b8c:	00000000 	nop
 b90:	0007000d 	break	0x7
 b94:	00001010 	mfhi	v0
 b98:	00001012 	mflo	v0
 b9c:	afc20050 	sw	v0,80(s8)
	} while (u != 0);
 ba0:	8fc20050 	lw	v0,80(s8)
 ba4:	00000000 	nop
 ba8:	1440ffb9 	bnez	v0,a90 <print_num+0xa8>
 bac:	00000000 	nop

	if (neg_flag) {
 bb0:	8fc20058 	lw	v0,88(s8)
 bb4:	00000000 	nop
 bb8:	10400007 	beqz	v0,bd8 <print_num+0x1f0>
 bbc:	00000000 	nop
		*p++ = '-';
 bc0:	8fc20010 	lw	v0,16(s8)
 bc4:	00000000 	nop
 bc8:	24430001 	addiu	v1,v0,1
 bcc:	afc30010 	sw	v1,16(s8)
 bd0:	2403002d 	li	v1,45
 bd4:	a0430000 	sb	v1,0(v0)
	}

	/* figure out actual length and adjust the maximum length */
	actualLength = p - buf;
 bd8:	8fc30010 	lw	v1,16(s8)
 bdc:	8fc20028 	lw	v0,40(s8)
 be0:	00000000 	nop
 be4:	00621023 	subu	v0,v1,v0
 be8:	afc20020 	sw	v0,32(s8)
	if (length < actualLength) {
 bec:	8fc3005c 	lw	v1,92(s8)
 bf0:	8fc20020 	lw	v0,32(s8)
 bf4:	00000000 	nop
 bf8:	0062102a 	slt	v0,v1,v0
 bfc:	10400004 	beqz	v0,c10 <print_num+0x228>
 c00:	00000000 	nop
		length = actualLength;
 c04:	8fc20020 	lw	v0,32(s8)
 c08:	00000000 	nop
 c0c:	afc2005c 	sw	v0,92(s8)
	}

	/* add padding */
	if (ladjust) {
 c10:	8fc20060 	lw	v0,96(s8)
 c14:	00000000 	nop
 c18:	10400003 	beqz	v0,c28 <print_num+0x240>
 c1c:	00000000 	nop
		padc = ' ';
 c20:	24020020 	li	v0,32
 c24:	a3c20064 	sb	v0,100(s8)
	}
	if (neg_flag && !ladjust && (padc == '0')) {
 c28:	8fc20058 	lw	v0,88(s8)
 c2c:	00000000 	nop
 c30:	1040002c 	beqz	v0,ce4 <print_num+0x2fc>
 c34:	00000000 	nop
 c38:	8fc20060 	lw	v0,96(s8)
 c3c:	00000000 	nop
 c40:	14400028 	bnez	v0,ce4 <print_num+0x2fc>
 c44:	00000000 	nop
 c48:	83c30064 	lb	v1,100(s8)
 c4c:	24020030 	li	v0,48
 c50:	14620024 	bne	v1,v0,ce4 <print_num+0x2fc>
 c54:	00000000 	nop
		for (i = actualLength - 1; i < length - 1; i++) {
 c58:	8fc20020 	lw	v0,32(s8)
 c5c:	00000000 	nop
 c60:	2442ffff 	addiu	v0,v0,-1
 c64:	afc20014 	sw	v0,20(s8)
 c68:	1000000c 	b	c9c <print_num+0x2b4>
 c6c:	00000000 	nop
			buf[i] = padc;
 c70:	8fc30028 	lw	v1,40(s8)
 c74:	8fc20014 	lw	v0,20(s8)
 c78:	00000000 	nop
 c7c:	00621021 	addu	v0,v1,v0
 c80:	93c30064 	lbu	v1,100(s8)
 c84:	00000000 	nop
 c88:	a0430000 	sb	v1,0(v0)
		for (i = actualLength - 1; i < length - 1; i++) {
 c8c:	8fc20014 	lw	v0,20(s8)
 c90:	00000000 	nop
 c94:	24420001 	addiu	v0,v0,1
 c98:	afc20014 	sw	v0,20(s8)
 c9c:	8fc2005c 	lw	v0,92(s8)
 ca0:	00000000 	nop
 ca4:	2442ffff 	addiu	v0,v0,-1
 ca8:	8fc30014 	lw	v1,20(s8)
 cac:	00000000 	nop
 cb0:	0062102a 	slt	v0,v1,v0
 cb4:	1440ffee 	bnez	v0,c70 <print_num+0x288>
 cb8:	00000000 	nop
		}
		buf[length - 1] = '-';
 cbc:	8fc2005c 	lw	v0,92(s8)
 cc0:	00000000 	nop
 cc4:	2442ffff 	addiu	v0,v0,-1
 cc8:	8fc30028 	lw	v1,40(s8)
 ccc:	00000000 	nop
 cd0:	00621021 	addu	v0,v1,v0
 cd4:	2403002d 	li	v1,45
 cd8:	a0430000 	sb	v1,0(v0)
 cdc:	10000017 	b	d3c <print_num+0x354>
 ce0:	00000000 	nop
	} else {
		for (i = actualLength; i < length; i++) {
 ce4:	8fc20020 	lw	v0,32(s8)
 ce8:	00000000 	nop
 cec:	afc20014 	sw	v0,20(s8)
 cf0:	1000000c 	b	d24 <print_num+0x33c>
 cf4:	00000000 	nop
			buf[i] = padc;
 cf8:	8fc30028 	lw	v1,40(s8)
 cfc:	8fc20014 	lw	v0,20(s8)
 d00:	00000000 	nop
 d04:	00621021 	addu	v0,v1,v0
 d08:	93c30064 	lbu	v1,100(s8)
 d0c:	00000000 	nop
 d10:	a0430000 	sb	v1,0(v0)
		for (i = actualLength; i < length; i++) {
 d14:	8fc20014 	lw	v0,20(s8)
 d18:	00000000 	nop
 d1c:	24420001 	addiu	v0,v0,1
 d20:	afc20014 	sw	v0,20(s8)
 d24:	8fc30014 	lw	v1,20(s8)
 d28:	8fc2005c 	lw	v0,92(s8)
 d2c:	00000000 	nop
 d30:	0062102a 	slt	v0,v1,v0
 d34:	1440fff0 	bnez	v0,cf8 <print_num+0x310>
 d38:	00000000 	nop
		}
	}

	/* prepare to reverse the string */
	int begin = 0;
 d3c:	afc00018 	sw	zero,24(s8)
	int end;
	if (ladjust) {
 d40:	8fc20060 	lw	v0,96(s8)
 d44:	00000000 	nop
 d48:	10400007 	beqz	v0,d68 <print_num+0x380>
 d4c:	00000000 	nop
		end = actualLength - 1;
 d50:	8fc20020 	lw	v0,32(s8)
 d54:	00000000 	nop
 d58:	2442ffff 	addiu	v0,v0,-1
 d5c:	afc2001c 	sw	v0,28(s8)
 d60:	10000027 	b	e00 <print_num+0x418>
 d64:	00000000 	nop
	} else {
		end = length - 1;
 d68:	8fc2005c 	lw	v0,92(s8)
 d6c:	00000000 	nop
 d70:	2442ffff 	addiu	v0,v0,-1
 d74:	afc2001c 	sw	v0,28(s8)
	}

	/* adjust the string pointer */
	while (end > begin) {
 d78:	10000021 	b	e00 <print_num+0x418>
 d7c:	00000000 	nop
		char tmp = buf[begin];
 d80:	8fc30028 	lw	v1,40(s8)
 d84:	8fc20018 	lw	v0,24(s8)
 d88:	00000000 	nop
 d8c:	00621021 	addu	v0,v1,v0
 d90:	90420000 	lbu	v0,0(v0)
 d94:	00000000 	nop
 d98:	a3c20030 	sb	v0,48(s8)
		buf[begin] = buf[end];
 d9c:	8fc30028 	lw	v1,40(s8)
 da0:	8fc2001c 	lw	v0,28(s8)
 da4:	00000000 	nop
 da8:	00621021 	addu	v0,v1,v0
 dac:	80430000 	lb	v1,0(v0)
 db0:	8fc40028 	lw	a0,40(s8)
 db4:	8fc20018 	lw	v0,24(s8)
 db8:	00000000 	nop
 dbc:	00821021 	addu	v0,a0,v0
 dc0:	a0430000 	sb	v1,0(v0)
		buf[end] = tmp;
 dc4:	8fc30028 	lw	v1,40(s8)
 dc8:	8fc2001c 	lw	v0,28(s8)
 dcc:	00000000 	nop
 dd0:	00621021 	addu	v0,v1,v0
 dd4:	93c30030 	lbu	v1,48(s8)
 dd8:	00000000 	nop
 ddc:	a0430000 	sb	v1,0(v0)
		begin++;
 de0:	8fc20018 	lw	v0,24(s8)
 de4:	00000000 	nop
 de8:	24420001 	addiu	v0,v0,1
 dec:	afc20018 	sw	v0,24(s8)
		end--;
 df0:	8fc2001c 	lw	v0,28(s8)
 df4:	00000000 	nop
 df8:	2442ffff 	addiu	v0,v0,-1
 dfc:	afc2001c 	sw	v0,28(s8)
	while (end > begin) {
 e00:	8fc3001c 	lw	v1,28(s8)
 e04:	8fc20018 	lw	v0,24(s8)
 e08:	00000000 	nop
 e0c:	0043102a 	slt	v0,v0,v1
 e10:	1440ffdb 	bnez	v0,d80 <print_num+0x398>
 e14:	00000000 	nop
	}

	out(data, buf, length);
 e18:	8fc3005c 	lw	v1,92(s8)
 e1c:	8fc20048 	lw	v0,72(s8)
 e20:	00603025 	move	a2,v1
 e24:	8fc50028 	lw	a1,40(s8)
 e28:	8fc4004c 	lw	a0,76(s8)
 e2c:	0040f809 	jalr	v0
 e30:	00000000 	nop
 e34:	0200e825 	move	sp,s0
}
 e38:	00000000 	nop
 e3c:	03c0e825 	move	sp,s8
 e40:	8fbf0044 	lw	ra,68(sp)
 e44:	8fbe0040 	lw	s8,64(sp)
 e48:	8fb0003c 	lw	s0,60(sp)
 e4c:	27bd0048 	addiu	sp,sp,72
 e50:	03e00008 	jr	ra
 e54:	00000000 	nop
	...
